var SEARCH_COOKIE = 'sd';
var Search = /** @class */ (function () {
    function Search(box) {
        this.box = box;
        this.showTip = true;
        this.SEARCH_ENGINE = [
            {
                name: '百度',
                icon: 'icon-baidu',
                url: 'https://www.baidu.com/s?wd={word}',
                suggest: function (keywords, cb) {
                    this.jsonp('https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=' + keywords, function (res) {
                        cb(res.s);
                    });
                },
            },
            {
                name: 'Bing',
                icon: 'icon-bing',
                url: 'https://cn.bing.com/search?q={word}',
            },
            {
                name: 'Google',
                icon: 'icon-google',
                url: 'https://www.google.com/search?q={word}',
            },
            {
                name: 'DuckDuckGo',
                icon: 'icon-duckduckgo',
                url: 'https://duckduckgo.com/?q={word}',
                suggest: function (keywords, cb) {
                    var _this = this;
                    this.jsonp('https://duckduckgo.com/ac/?q=' + keywords, function (res) {
                        cb(_this.pluck(res, 'phrase'));
                    }, 'callback');
                },
            },
            {
                name: 'Github',
                icon: 'icon-github',
                url: 'https://github.com/search?utf8=✓&q={word}',
            },
            {
                name: '哔哩哔哩',
                icon: 'icon-bilibili',
                url: 'https://search.bilibili.com/all?keyword={word}',
                suggest: function (keywords, cb) {
                    var _this = this;
                    this.jsonp('https://s.search.bilibili.com/main/suggest?func=suggest&suggest_type=accurate&sub_type=tag&main_ver=v1&highlight=&userid=0&bangumi_acc_num=1&special_acc_num=1&topic_acc_num=1&upuser_acc_num=3&tag_num=10&special_num=10&bangumi_num=10&upuser_num=3&term=' + keywords, function (res) {
                        if (!res || !res.result.tag) {
                            return cb([]);
                        }
                        return cb(_this.pluck(res.result.tag, 'value'));
                    }, 'jsoncallback');
                }
            },
            {
                name: '淘宝',
                icon: 'icon-taobao',
                url: 'https://s.taobao.com/search?q={word}',
            },
            {
                name: '京东',
                icon: 'icon-jd',
                url: 'https://search.jd.com/Search?keyword={word}',
            }
        ];
        this.engine = parseInt(window.localStorage.getItem(SEARCH_COOKIE), 10) || 0;
        this.refreshEngine();
        this.refreshDefault();
        this.bindEvent();
    }
    Search.prototype.bindEvent = function () {
        var that = this;
        var isEngine = false;
        var engineBox = this.box.find(".search-engine");
        engineBox.click(function (e) {
            e.stopPropagation();
        }).on('click', '.toggle-box', function (e) {
            $(this).toggleClass('checked');
            that.showTip = $(this).hasClass('checked');
        }).on('click', '.search-engine-body li', function () {
            that.changeEngine($(this).index());
            engineBox.hide();
        });
        this.box.on('click', '.search-icon', function (e) {
            e.stopPropagation();
            engineBox.show();
        }).on('keyup', '.search-input input', function (e) {
            var $this = $(this);
            var keywords = $this.val();
            if (e.key === 'Enter') {
                that.tapSearch(keywords);
                return;
            }
            if (!that.showTip) {
                return;
            }
            if (e.key !== 'ArrowDown' && e.key !== 'ArrowUp') {
                that.refreshTip(keywords);
                return;
            }
            var items = that.box.find('.search-tips li');
            if (items.length < 0) {
                return;
            }
            var i = -1;
            for (var j = 0; j < items.length; j++) {
                var element_1 = $(items[j]);
                if (element_1.hasClass('active')) {
                    i = j;
                    element_1.removeClass('active');
                    break;
                }
            }
            if (e.key === 'ArrowDown') {
                i = i < items.length - 1 ? i + 1 : 0;
            }
            else if (e.key === 'ArrowUp') {
                i = (i < 1 ? items.length : i) - 1;
            }
            var element = items.eq(i);
            element.addClass('active');
            $this.val(element.text().replace(/^\d+/, ''));
        }).on('click', '.search-input input', function (e) {
            e.stopPropagation();
            engineBox.hide();
        }).on('click', '.search-tips li', function () {
            that.tapSearch($(this).text().replace(/^\d+/, ''));
        });
        $(document).click(function () {
            that.box.find('.search-tips').hide();
            engineBox.hide();
        });
    };
    /**
     * changeEngine
     */
    Search.prototype.changeEngine = function (i) {
        this.engine = i;
        window.localStorage.setItem(SEARCH_COOKIE, i.toString());
        this.refreshDefault();
    };
    /**
     * tapSearch
     */
    Search.prototype.tapSearch = function (keywords) {
        keywords = keywords.trim();
        if (!keywords || keywords.length < 1) {
            return;
        }
        this.box.find('.search-tips').hide();
        var engine = this.SEARCH_ENGINE[this.engine];
        var url = engine.url.replace('{word}', encodeURIComponent(keywords.trim()));
        window.open(url, '_blank');
    };
    Search.prototype.refreshDefault = function () {
        var engine = this.SEARCH_ENGINE[this.engine];
        this.box.find('.search-icon').attr('class', 'search-icon ' + engine.icon);
    };
    Search.prototype.refreshTip = function (keywords) {
        var _this = this;
        var box = this.box.find('.search-tips');
        var ul = box.find('ul');
        if (!keywords || keywords.length < 1) {
            ul.html('');
            box.hide();
            return;
        }
        var engine = this.SEARCH_ENGINE[this.engine];
        var suggest = !engine.suggest ? this.SEARCH_ENGINE[0].suggest : engine.suggest;
        keywords = encodeURIComponent(keywords);
        if (typeof suggest == 'string') {
            this.jsonp(suggest + keywords, function (res) {
                if (!res || !res.data || res.data.length < 1) {
                    ul.html('');
                    box.hide();
                    return;
                }
                ul.html(_this.getTipList(res.data || []));
                box.show();
            });
            return;
        }
        suggest.call(this, keywords, function (res) {
            if (!res || res.length < 1) {
                ul.html('');
                box.hide();
                return;
            }
            ul.html(_this.getTipList(res || []));
            box.show();
        });
    };
    /**
     * pluck
     */
    Search.prototype.pluck = function (data, key) {
        var args = [];
        if (!data) {
            return args;
        }
        $.each(data, function () {
            if (this[key]) {
                args.push(this[key]);
            }
        });
        return args;
    };
    Search.prototype.jsonp = function (url, cb, cbName) {
        if (cbName === void 0) { cbName = 'cb'; }
        $.ajax({
            url: url,
            dataType: 'jsonp',
            jsonp: cbName
        }).done(function (res) {
            cb(res);
        }).fail(function () {
            cb();
        });
    };
    Search.prototype.refreshEngine = function () {
        this.box.find('.search-engine-body').html(this.getEngineList());
    };
    Search.prototype.getEngineList = function () {
        var html = '';
        this.SEARCH_ENGINE.forEach(function (item) {
            html += "<li><span class=\"".concat(item.icon, "\"></span>").concat(item.name, "</li>");
        });
        return html;
    };
    Search.prototype.getTipList = function (data) {
        var html = '';
        data.forEach(function (item, i) {
            i += 1;
            html += "<li><span>".concat(i, "</span> ").concat(item, "</li>");
        });
        return html;
    };
    return Search;
}());
var NAV_COOKIE = 'nav_self';
var Navigation = /** @class */ (function () {
    function Navigation(box, groups) {
        if (groups === void 0) { groups = []; }
        this.box = box;
        this.groups = groups;
        this.editData = [];
        this.dialog = $('#add-box').dialog();
        this.load();
        this.refresh();
        this.bindEvent();
    }
    /**
     * load
     */
    Navigation.prototype.load = function () {
        if (this.groups.length > 0) {
            return;
        }
        var data = window.localStorage.getItem(NAV_COOKIE);
        if (data && data.indexOf('{') >= 0) {
            this.groups = JSON.parse(data);
            return;
        }
        var that = this;
        this.groups = [];
        this.box.find('.panel-body .group-item').each(function () {
            var $this = $(this);
            var group = {
                name: $this.find('.group-name').text(),
                items: []
            };
            $this.find('.site-item').each(function () {
                var $a = $(this);
                group.items.push({
                    name: $a.text(),
                    url: $a.attr('href')
                });
            });
            that.groups.push(group);
        });
    };
    /**
     * bindEvent
     */
    Navigation.prototype.bindEvent = function () {
        var that = this;
        this.box.on('click', '.custom-btn', function () {
            var box = $(this).closest('.self-box');
            box.toggleClass('edit-mode');
        }).on('click', '.panel-close', function () {
            $(this).closest('.self-box').removeClass('edit-mode');
        }).on('click', '.site-item', function (e) {
            var box = $(this).closest('.self-box');
            if (!box.hasClass('edit-mode')) {
                return;
            }
            e.preventDefault();
        }).on('click', '.site-item .fa-times', function (e) {
            that.deleteByA($(this).closest('.site-item'));
        }).on('click', '.site-item .fa-edit', function (e) {
            that.editByA($(this).closest('.site-item'));
        }).on('click', '.add-btn', function () {
            that.showDialog({
                group: '作为分组名',
                name: '',
                link: ''
            });
        }).on('click', '.panel-footer .btn', function () {
            var text = $(this).text();
            if (text.indexOf('本') >= 0) {
                window.localStorage.setItem(NAV_COOKIE, JSON.stringify(that.groups));
                Dialog.tip('本地保存成功！');
                return;
            }
            if (text.indexOf('恢') >= 0) {
                that.groups = [];
                window.localStorage.removeItem(NAV_COOKIE);
                Dialog.tip('清空成功！');
                that.saveAsync();
                return;
            }
            if (text.indexOf('云') >= 0) {
                that.saveAsync();
                return;
            }
        });
        this.dialog.find('select').change(function () {
            var val = $(this).val();
            that.dialog.find('.input-group').eq(2).toggle(val !== '作为分组名');
        });
        this.dialog.on('done', function () {
            var data = {
                group: this.find('select').val(),
                name: this.find('[name=name]').val(),
                link: this.find('[name=link]').val()
            };
            if (data.group == '作为分组名') {
                data.group == '';
            }
            else if (!data.link || data.link.indexOf('//') < 0) {
                alert('请输入完整的网址');
                return;
            }
            that.save(data);
            this.close();
        });
    };
    /**
     * deleteByA
     */
    Navigation.prototype.deleteByA = function (item) {
        var i = item.closest('.group-item').index();
        var j = item.index();
        this.groups[i].items.splice(j, 1);
        item.remove();
    };
    Navigation.prototype.editByA = function (item) {
        var i = item.closest('.group-item').index();
        var j = item.index();
        this.editData = [i, j];
        this.showDialog({
            group: this.groups[i].name,
            name: this.groups[i].items[j].name,
            link: this.groups[i].items[j].url
        });
    };
    /**
     * getItemByA
     */
    Navigation.prototype.getItemByA = function (item) {
        var i = item.closest('.group-item').index();
        var j = item.index();
        return this.groups[i].items[j];
    };
    /**
     * save
     */
    Navigation.prototype.save = function (data) {
        if (data.group == '' || data.group == '作为分组名') {
            this.saveGroup(data.name);
        }
        else {
            this.saveSite(data);
        }
        this.refresh();
    };
    Navigation.prototype.saveAsync = function () {
        $.post('form/save', {
            model: 'navigation',
            content: JSON.stringify(this.groups),
            title: '我的导航',
        }, function (res) {
            if (res.code == 200) {
                Dialog.tip('保存成功');
                return;
            }
            Dialog.tip(res.message);
        }, 'json');
    };
    Navigation.prototype.addSite = function (data) {
        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {
            var group = _a[_i];
            if (group.name == data.group) {
                group.items.push({
                    name: data.name,
                    url: data.link
                });
            }
        }
    };
    Navigation.prototype.saveSite = function (data) {
        if (this.editData.length === 2) {
            var _a = this.editData, i = _a[0], j = _a[1];
            if (data.group === this.groups[i].name) {
                this.groups[i].items[j] = {
                    name: data.name,
                    url: data.link
                };
            }
            else {
                this.groups[i].items.splice(j, 1);
                this.addSite(data);
            }
        }
        else {
            this.addSite(data);
        }
        this.editData = [];
    };
    Navigation.prototype.saveGroup = function (name) {
        this.groups.push({
            name: name,
            items: []
        });
    };
    Navigation.prototype.showDialog = function (options) {
        var html = '<option>作为分组名</option>';
        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {
            var item = _a[_i];
            html += '<option>' + item.name + '</option>';
        }
        this.dialog.find('select').html(html);
        for (var key in options) {
            if (options.hasOwnProperty(key)) {
                this.dialog.find('[name=' + key + ']').val(options[key]);
            }
        }
        this.dialog.find('select').trigger('change');
        this.dialog.show();
    };
    /**
     * refresh
     */
    Navigation.prototype.refresh = function () {
        this.box.find('.panel-body').html(this.getHtml());
    };
    Navigation.prototype.getHtml = function () {
        var html = '';
        if (!this.groups || this.groups.length < 1) {
            return html;
        }
        this.groups.forEach(function (group) {
            var ul = '';
            group.items.forEach(function (item) {
                ul += "<a href=\"".concat(item.url, "\" target=\"_blank\" class=\"site-item\" rel=\"noopener noreferrer\">\n                <i class=\"fa fa-times\"></i>\n                ").concat(item.name, "\n                <i class=\"fa fa-edit\"></i>\n            </a>");
            });
            html += "<div class=\"group-item\">\n            <div class=\"group-name\">".concat(group.name, "</div>\n            <div>\n                ").concat(ul, "\n            </div>\n        </div>");
        });
        return html;
    };
    return Navigation;
}());
function bindNavigation(data) {
    var search = new Search($('.search-box')), navigate = new Navigation($('.self-box'), data);
}
function bindTheme() {
    $('.theme-list .item').mouseenter(function () {
        var img = $(this).find('.thumb img');
        var height = img.closest('.thumb').innerHeight();
        var h = img.height();
        if (h <= height) {
            return;
        }
        img.css('top', (height - h) + 'px');
    }).mouseleave(function () {
        $(this).find('.thumb img').css('top', 0);
    });
}
$(function () {
    $(document).on('click', ".tab-box .tab-header .tab-item", function () {
        var $this = $(this);
        $this.addClass("active").siblings().removeClass("active");
        $this.closest(".tab-box").find(".tab-body .tab-item").eq($this.index()).addClass("active").siblings().removeClass("active");
    }).on('click', '.nav-bar .nav-toggle', function () {
        $(this).closest('.nav-bar').toggleClass('open');
    });
    $('img.lazy').lazyload({
        callback: 'img'
    });
    $(".template-lazy").lazyload({ callback: 'tpl' });
});
